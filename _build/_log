### Starting build.
# Target: board.mli.depends, tags: { package(ANSITerminal), package(oUnit), extension:mli, file:board.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package ANSITerminal -modules board.mli > board.mli.depends # cached
# Target: tile.mli.depends, tags: { package(ANSITerminal), package(oUnit), extension:mli, file:tile.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package ANSITerminal -modules tile.mli > tile.mli.depends # cached
# Target: tile.cmi, tags: { package(ANSITerminal), package(oUnit), byte, compile, extension:mli, file:tile.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package ANSITerminal -o tile.cmi tile.mli # cached
# Target: board.cmi, tags: { package(ANSITerminal), package(oUnit), byte, compile, extension:mli, file:board.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package ANSITerminal -o board.cmi board.mli
+ ocamlfind ocamlc -c -package oUnit -package ANSITerminal -o board.cmi board.mli
File "board.mli", line 14, characters 24-30:
14 |   val get_tile : int -> Tile.t
                             ^^^^^^
Error: Unbound type constructor Tile.t
Command exited with code 2.
# Compilation unsuccessful.
